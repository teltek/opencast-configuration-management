---

#The location of the Git repo you want to fetch
#Note: If this is a protected repository you will need to make it ssh accessible, and populate the ssh directory in group_vars with an appropriate deployment key and known hosts file
git_repo_location: https://bitbucket.org/opencast-community/matterhorn.git

#The user to run the Matterhorn service(s) as.  This includes any Solr or nginx instances.
matterhorn_user: matterhorn
#The group to run the Matterhorn service(s) as.  This includes any Solr or nginx instances.
matterhorn_group: matterhorn

#Set this to true to enable the JVM debugging interface.  Do not do this for production systems.
mh_debug: false

#Matterhorn's admin username
mh_admin_username: admin
#Matterhorn's admin password
mh_admin_password: opencast
#Matterhorn's digest username
#Your CA will need this
mh_digest_username: matterhorn_system_account
#Matterhorn's digest password
#Your CA will need this
mh_digest_password: CHANGE_ME

#These two must match
#The git branch/tag to check out.
mh_version: r/2.3.x
#The pom version within that branch/tag
mh_pom_version: 2.3.x-SNAPSHOT

#The parent directory for all Matterhorn related services
mh_parent_dir: /opt/matterhorn
#Where to store Matterhorn itself
mh_base_dir: "{{mh_parent_dir}}/matterhorn"
#Where to store Matterhorn's data.  Note: this is also the NFS mount point, if applicable
mh_work_dir: "{{mh_parent_dir}}/work"
#Where to store Matterhorn's streams.  This is used by the streaming servers, if any.
mh_streaming_dir: "{{mh_work_dir}}/streams"
#Where to store Matterhorn's configuration data.
mh_config_dir: "/etc/matterhorn"
#Where to store Matterhorn's logs.
mh_log_dir: "/var/log/matterhorn"

#The admin URL.  This is the URL you use to access the admin UI
admin_url: "http://{{groups['admin'][0]}}"
#The engage URL.  This is the URL you use to access the engage UI
engage_url: "http://{{groups['engage'][0]}}"

#The database schema's name
db_schema: matterhorn
#The database server
db_host: "{{groups['mysql'][0]}}"
#True to generate the DB tables on startup, false use the schema below
db_ddl: false
#The database schema location
db_schema_location: "{{mh_base_dir}}/docs/scripts/ddl/mysql5.sql"
#The full URL of the database server
db_url: "jdbc:mysql://{{db_host}}/{{db_schema}}"
#The database user
db_user: matterhorn
#The database password
db_pass: matterhorn_db_passwd 

#Where to store the auxilliary application
mh_tools_dir: "{{mh_parent_dir}}/tools"
#This directory is added to the path, symlinks are encouraged
mh_tools_bin: "{{mh_tools_dir}}/bin"
#Where to store downloaded tool archives
mh_tool_archive_dir: "{{mh_tools_dir}}/downloads"

#The nginx version to use
nginx_version: 1.2.4
#Where to store nginx
nginx_home: "{{mh_tools_dir}}/nginx-{{nginx_version}}"

#The node.js version to download
node_version: v0.12.5
#Where to store node.js
node_home: "{{mh_tools_dir}}/node-{{node_version}}-linux-x64"

#The engage solr server's port
solr_port: 8983
#The engage solr server URL
engage_solr_index: "http://{{groups['solr'][0]}}:{{solr_port}}/solr"
#The engage solr server's directory
tomcat_dir: "{{mh_tools_dir}}/apache-tomcat-7.0.5"
#Where to store the engage solr data
solr_data_dir: "{{tomcat_dir}}/solr/"

#The ActiveMQ version to use
activemq_version: 5.11.0
#The ActiveMQ main directory
activemq_home_dir: "{{mh_tools_dir}}/apache-activemq-{{activemq_version}}"
#Where to store the ActiveMQ data
activemq_data_dir: "{{activemq_home_dir}}/data"
#Where to store ActiveMQ's logs
activemq_log_dir: "{{activemq_home_dir}}/logs"
#Which user to run ActiveMQ as
activemq_user: "{{matterhorn_user}}"
#Which group to run ActiveMQ as
activemq_group: "{{matterhorn_group}}"

#The maven version.  Many distros do not have 3.1.0 as part of their packages yet
mvn_version: 3.1.0
#Where to download Maven from
mvn_url: "http://archive.apache.org/dist/maven/maven-3/{{mvn_version}}/binaries/apache-maven-{{mvn_version}}-bin.tar.gz"
#Where to store Maven
mvn_home: "{{mh_tools_dir}}/apache-maven-{{mvn_version}}"
#Where to store the M2 backup directory in the case of a wipe.
m2_backup_dir: "/opt/m2_backup"
#Where to store the Maven repository
m2_repo: "{{mh_work_dir}}/.m2/repository"
#The default Maven options.
maven_opts: "-Xms256m -Xmx512m -XX:PermSize=64m -XX:MaxPermSize=128m -Dmaven.repo.local={{m2_repo}}"

#Where to get a static FFmpeg build from
ffmpeg_static: http://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz

#Set to true to skip checkstyles during build
checkstyle_skip: false
#Set to tru to skip tests during build
skip_tests: false
#Set to false to skip building entirely (just reset the configuration files)
do_build: true
#Set to false to skip building nginx
build_nginx: true
